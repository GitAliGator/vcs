name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest
        # Install torch for testing (simulates Colab/user environment)
        pip install torch
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        # Test package build and all public APIs
        echo "Testing package structure and public APIs..."
        
        # Test basic package import and version
        python -c "import vcs; print(f'✅ VCS version: {vcs.__version__}')"
        
        # Test all public APIs dynamically from __all__
        python << 'EOF'
        import vcs
        print('Testing all public APIs from __all__...')
        failed_imports = []
        for api_name in vcs.__all__:
            try:
                getattr(vcs, api_name)
                print(f'✅ {api_name}')
            except Exception as e:
                failed_imports.append((api_name, str(e)))
                print(f'❌ {api_name}: {e}')
        
        if failed_imports:
            print(f'Failed to import {len(failed_imports)} APIs')
            exit(1)
        else:
            print(f'✅ All {len(vcs.__all__)} public APIs importable')
        EOF
        
        # Test exact configuration values
        python << 'EOF'
        import vcs
        print('Testing configuration constants...')
        assert vcs.DEFAULT_LCT == 0, f'LCT should be 0, got {vcs.DEFAULT_LCT}'
        assert vcs.DEFAULT_CONTEXT_CUTOFF_VALUE == 0.6, f'Context cutoff should be 0.6, got {vcs.DEFAULT_CONTEXT_CUTOFF_VALUE}'
        assert vcs.DEFAULT_CONTEXT_WINDOW_CONTROL == 4.0, f'Context window control should be 4.0, got {vcs.DEFAULT_CONTEXT_WINDOW_CONTROL}'
        assert vcs.DEFAULT_CHUNK_SIZE == 1, f'Chunk size should be 1, got {vcs.DEFAULT_CHUNK_SIZE}'
        print('✅ All configuration values are correct')
        EOF
        
        echo "✅ All package tests passed"
    
    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Test package build
      run: python -m build