name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest
        # Install torch for testing (simulates Colab/user environment)
        pip install torch
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        # Test basic package functionality without requiring embedding functions
        echo "Testing package structure and imports..."
        
        # Test basic package import and version
        python -c "import vcs; print(f'✅ VCS version: {vcs.__version__}')"
        
        # Test core imports
        python -c "from vcs import compute_vcs_score; print('✅ Main function importable')"
        python -c "from vcs._config import DEFAULT_CONTEXT_CUTOFF_PERCENTAGE; print('✅ Config module imports')"
        python -c "from vcs._utils._utils import _calculate_f1; print('✅ Utilities module imports')"
        
        # Test configuration validation
        python -c "from vcs._config import DEFAULT_CONTEXT_CUTOFF_PERCENTAGE; assert 0 < DEFAULT_CONTEXT_CUTOFF_PERCENTAGE < 1; print('✅ Config values are valid')"
        
        # Test utility functions
        python -c "from vcs._utils._utils import _calculate_f1; assert _calculate_f1(1.0, 1.0) == 1.0; assert _calculate_f1(0.0, 1.0) == 0.0; print('✅ Utility functions work')"
        
        echo "✅ All basic functionality tests passed"
    
    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Test package build
      run: python -m build